(ns cellular-automaton\test\modules\line-test
  (:require cellular-automaton\modules\line)
  (:require cellular-automaton\modules\rule)
  (:require phel\test :refer [deftest is]))

(deftest test-line-initial
  (let [l (line/create-line 80)]
    (is (= 0 (get-in l [:cells 0])))))

(deftest test-setup-center-bit
  (let [l (line/create-line 80)
        l (line/setup-center l)]
    (is (= 1 (get-in l [:cells 40])))))

(deftest test-setup-random-bit
  (let [l (line/create-line 80)
        l (line/setup-random l)]
    (is (< 1 (count (filter |(= $ 1) (l :cells)))))))

(deftest test-next-line
  (let [l (line/create-line 80)
        l (line/setup-center l)
        r (rule/Rule 30)
        l (line/next-line l r)]
    (is (= 1 (get-in l [:cells 39])))
    (is (= 1 (get-in l [:cells 40])))
    (is (= 1 (get-in l [:cells 41])))))

(deftest test-line-expression
  (let [l (line/create-line 80)
        l (line/setup-center l)
        r (rule/Rule 30)
        l (line/next-line l r)
        expected "                                       ###                                      "]
    (is (= 80 (php/mb_strlen (line/expression l))))
    (is (= expected (line/expression l)))))
